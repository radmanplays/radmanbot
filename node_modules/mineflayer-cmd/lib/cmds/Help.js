"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function default_1(cmdManager) {
    function helpCommand(sender, _flags, args, cb) {
        const log = (msg) => cmdManager.log(sender, msg);
        function listHelpFor(cmd) {
            log(`${cmd.name} - ${cmd.help}`);
            log(`  Usage: ${cmd.usage}`);
            if (cmd.flags.length > 0) {
                log(`  Flags:`);
                for (const flag of cmd.flags) {
                    log(`  ${flag.usage}`);
                }
            }
        }
        function listAllCommands() {
            log('Available Commands:');
            for (const cmd of cmdManager.commands) {
                listHelpFor(cmd);
            }
        }
        if (args.length === 0) {
            listAllCommands();
        }
        else if (args.length === 1) {
            const cmdName = args[0].toLowerCase();
            const cmd = cmdManager.commands.find(c => c.name.toLowerCase() === cmdName);
            if (cmd == null) {
                log(`Command '${args[0]}' not found!`);
            }
            else {
                listHelpFor(cmd);
            }
        }
        else {
            log('Usage: help [command name]');
        }
        cb();
    }
    cmdManager.registerCommand('help', helpCommand, 'Lists a description and usage information for all commands.', 'help [command name]');
}
exports.default = default_1;
